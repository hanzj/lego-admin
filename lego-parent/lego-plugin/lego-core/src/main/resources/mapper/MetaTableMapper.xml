<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lego.core.data.mybatis.mapper.MetaTableMapper">

    <resultMap type="com.lego.core.dto.MetaTableColumnInfo" id="GenTableColumnResult">
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
        <result property="columnType" column="column_type"/>
        <result property="sort" column="sort"/>
        <result property="isRequired" column="is_required"/>
        <result property="isPk" column="is_pk"/>
        <result property="isIncrement" column="is_increment"/>
    </resultMap>

    <select id="selectDBName" resultType="java.lang.String">
        SELECT t.SCHEMA_NAME FROM sys_schema_db t
        WHERE t.SCHEMA_NAME NOT IN ('mysql', 'information_schema', 'sys', 'performance_schema')
    </select>

    <select id="selectCurrentDBName" resultType="java.lang.String">
        SELECT database()
    </select>

    <select id="selectByDBName" resultType="com.lego.core.dto.TypeInfo">
        SELECT t.table_name code, CONCAT(t.table_name, '(', t.table_comment, ')') name, t.create_time, t.update_time
        FROM sys_schema_table t
        <where>
            <if test="@com.lego.core.util.StringUtil@isBlank(dbName)">
                AND t.table_schema = (select database())
            </if>
            <if test="dbName != null and dbName != ''">
                AND t.table_schema = #{dbName}
            </if>
            AND t.table_name NOT LIKE 'sys_%'
            AND t.table_name NOT LIKE 'sharding_%'
            AND t.table_name NOT LIKE '%dictionaries'
            AND t.table_name NOT LIKE '%simple_type'
            AND t.table_name NOT LIKE 'act_%'
            AND t.table_name NOT LIKE 'flw_%'
            AND t.table_name NOT LIKE 'report_%'
            AND t.table_name NOT LIKE 'doc_%'
            AND t.table_name NOT LIKE 'mobile_%'
            AND t.table_name NOT LIKE 'xxl_%'
            AND t.table_name NOT LIKE 'test_%'
        </where>
    </select>

    <select id="selectCommentByName" resultType="String">
        SELECT t.table_comment
        FROM sys_schema_table t
        <where>
            AND t.table_name = #{tableName}
            AND t.table_schema = (select database())
        </where>
    </select>

    <select id="selectColumnsName" parameterType="String" resultType="com.lego.core.dto.TypeInfo">
        select column_name code, column_comment name
        from sys_schema_column where table_schema = (select database()) and table_name = (#{tableName})
        order by ordinal_position
    </select>

    <select id="selectColumns" parameterType="String" resultMap="GenTableColumnResult">
        select
        LOWER(column_name) column_name,
        column_comment,
        column_type,
        ordinal_position as sort,
        (case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then 1 else 0 end) as is_required,
        (case when column_key = 'PRI' then 1 else 0 end) as is_pk,
        (case when column_key = 'UNI' then 1 else 0 end) as is_unique,
        (case when extra = 'auto_increment' then 1 else 0 end) as is_increment
        from sys_schema_column where table_schema = (select database()) and table_name = (#{tableName})
        order by ordinal_position
    </select>
</mapper>