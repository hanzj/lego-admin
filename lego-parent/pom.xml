<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.lego</groupId>
	<artifactId>lego-parent</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.11</version>
	</parent>

	<properties>
        <skipTests>true</skipTests>
		<mysql.version>8.0.22</mysql.version>
		<hutool.version>5.8.26</hutool.version>
		<snakeyaml.version>1.33</snakeyaml.version>
		<sa-token.version>1.38.0</sa-token.version>
		<fastjson.version>2.0.47</fastjson.version>
		<redisson.version>3.33.0</redisson.version>
		<mybatis-plus.version>3.4.2</mybatis-plus.version>
		<shardingsphere.version>5.4.1</shardingsphere.version>
		<spring.cloud.version>2021.0.9</spring.cloud.version>
		<spring.cloud.alibaba.version>2021.0.6.0</spring.cloud.alibaba.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<repositories>
        <repository>
            <id>central</id>
            <name>阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-logging</artifactId>
				<exclusions>
					<exclusion>
						<groupId>*</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring.cloud.alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
    	<module>lego-crm</module>
		<module>lego-admin</module>
        <module>lego-flowable</module>
        <module>lego-report</module>
        <module>lego-gateway</module>
        <module>lego-doc</module>
		<module>lego-plugin</module>
		<module>lego-job</module>
        <module>lego-mobile</module>
		<module>lego-system</module>
    </modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>
									${project.build.directory}/lib/
								</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<descriptors>
							<descriptor>script/assembly.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-package</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>${project.build.directory}</directory>
										<includes>
											<include>*.tar.gz</include>
										</includes>
									</resource>
								</resources>
								<outputDirectory>${project.parent.basedir}/../package</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerVersion>${java.version}</compilerVersion>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
			<plugin>
				<inherited>false</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>run-sql</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target if="sql.exec">
								<ant antfile="script/run-sql.xml" target="default" inheritAll="false">
									<property name="driver_classpath" refid="maven.test.classpath"/>
								</ant>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>ui-package</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target if="ui.exec">
								<ant antfile="script/build-ui.xml" target="default" inheritAll="false"/>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>ui-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant antfile="script/build-ui.xml" target="clean" inheritAll="false"/>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>run-sql-update</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target if="sql-update.exec">
								<ant antfile="script/run-sql.xml" target="update" inheritAll="false">
									<property name="driver_classpath" refid="maven.test.classpath"/>
								</ant>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>run-sql-test</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target if="sql-test.exec">
								<ant antfile="script/run-sql.xml" target="test" inheritAll="false">
									<property name="driver_classpath" refid="maven.test.classpath"/>
								</ant>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>